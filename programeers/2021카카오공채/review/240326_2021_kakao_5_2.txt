	{'flip': 0, 'cursor': (3, 3), 'board': ((0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0))}
count :31
(('flip', 0), ('cursor', (3, 3)), ('board', ((0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0))))
count :30
(('flip', (4, 1, 1)), ('cursor', (3, 3)), ('board', ((0, 0, 0, 0), (0, 4, 0, 0), (0, 0, 0, 0), (0, 0, 0, 4))))
count :29
(('flip', (4, 1, 1)), ('cursor', (1, 3)), ('board', ((0, 0, 0, 0), (0, 4, 0, 0), (0, 0, 0, 0), (0, 0, 0, 4))))
count :28
(('flip', (4, 1, 1)), ('cursor', (1, 1)), ('board', ((0, 0, 0, 0), (0, 4, 0, 0), (0, 0, 0, 0), (0, 0, 0, 4))))
count :27
(('flip', 0), ('cursor', (1, 1)), ('board', ((0, 0, 0, 0), (0, 4, 0, 0), (0, 0, 0, 0), (0, 0, 0, 4))))
count :26
(('flip', 0), ('cursor', (1, 0)), ('board', ((0, 0, 0, 0), (0, 4, 0, 0), (0, 0, 0, 0), (0, 0, 0, 4))))
count :25
(('flip', (6, 3, 2)), ('cursor', (1, 0)), ('board', ((0, 0, 0, 0), (6, 4, 0, 0), (0, 0, 0, 0), (0, 0, 6, 4))))
count :24
(('flip', (6, 3, 2)), ('cursor', (3, 0)), ('board', ((0, 0, 0, 0), (6, 4, 0, 0), (0, 0, 0, 0), (0, 0, 6, 4))))
count :23
(('flip', (6, 3, 2)), ('cursor', (3, 2)), ('board', ((0, 0, 0, 0), (6, 4, 0, 0), (0, 0, 0, 0), (0, 0, 6, 4))))
count :22
(('flip', 0), ('cursor', (3, 2)), ('board', ((0, 0, 0, 0), (6, 4, 0, 0), (0, 0, 0, 0), (0, 0, 6, 4))))
count :21
(('flip', 0), ('cursor', (3, 0)), ('board', ((0, 0, 0, 0), (6, 4, 0, 0), (0, 0, 0, 0), (0, 0, 6, 4))))
count :20
(('flip', (3, 1, 2)), ('cursor', (3, 0)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :19
(('flip', (3, 1, 2)), ('cursor', (3, 2)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :18
(('flip', (3, 1, 2)), ('cursor', (1, 2)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :17
(('flip', 0), ('cursor', (1, 2)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :16
(('flip', 0), ('cursor', (0, 2)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :15
(('flip', 0), ('cursor', (0, 3)), ('board', ((0, 0, 0, 0), (6, 4, 3, 0), (0, 0, 0, 0), (3, 0, 6, 4))))
count :14
(('flip', (2, 2, 1)), ('cursor', (0, 3)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 0, 0), (3, 0, 6, 4))))
count :13
(('flip', (2, 2, 1)), ('cursor', (2, 3)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 0, 0), (3, 0, 6, 4))))
count :12
(('flip', (2, 2, 1)), ('cursor', (2, 1)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 0, 0), (3, 0, 6, 4))))
count :11
(('flip', 0), ('cursor', (2, 1)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 0, 0), (3, 0, 6, 4))))
count :10
(('flip', 0), ('cursor', (2, 2)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 0, 0), (3, 0, 6, 4))))
count :9
(('flip', (1, 2, 2)), ('cursor', (2, 2)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 1, 0), (3, 0, 6, 4))))
count :8
(('flip', 0), ('cursor', (2, 2)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 1, 0), (3, 0, 6, 4))))
count :7
(('flip', 0), ('cursor', (2, 3)), ('board', ((0, 0, 0, 2), (6, 4, 3, 0), (0, 2, 1, 0), (3, 0, 6, 4))))
count :6
(('flip', (5, 0, 1)), ('cursor', (2, 3)), ('board', ((0, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :5
(('flip', (5, 0, 1)), ('cursor', (0, 3)), ('board', ((0, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :4
(('flip', (5, 0, 1)), ('cursor', (0, 1)), ('board', ((0, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :3
(('flip', 0), ('cursor', (0, 1)), ('board', ((0, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :2
(('flip', 0), ('cursor', (0, 0)), ('board', ((0, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :1
(('flip', (1, 0, 0)), ('cursor', (0, 0)), ('board', ((1, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))
count :0
(('flip', 0), ('cursor', (0, 0)), ('board', ((1, 5, 0, 2), (6, 4, 3, 0), (0, 2, 1, 5), (3, 0, 6, 4))))